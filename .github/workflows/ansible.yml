name: Ansible Galaxy Publish

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install ansible-lint

    - name: Lint with ansible-lint
      run: ansible-lint --offline --project-dir .

  build:
    runs-on: ubuntu-latest
    needs: lint
    if: github.event.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: python -m pip install -r requirements.txt

    - name: Update galaxy.yml version with the new tag if tag is present
      run: |
        set -euxo pipefail
        sed -i "s/^version: .*/version: ${GITHUB_SHA::7}/" galaxy.yml
        if [[ -n "${GITHUB_REF#refs/tags/v}" ]]; then
          echo "${GITHUB_REF#refs/tags/v}"
          # sed -i "s/^version: .*/version: ${GITHUB_REF#refs\/tags\/v}/" galaxy.yml
        fi

    - name: Build collection
      run: ansible-galaxy collection build --force

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ansible-collection
        path: '*.tar.gz'

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: ansible-collection

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: python -m pip install ansible

    - name: Publish collection
      run: ansible-galaxy collection publish *.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}
      env:
        GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if pre-release
        id: prerelease
        run: |
          echo "prerelease=$(if [[ "${{ github.ref }}" == *"rc"* ]]; then echo "true"; else echo "false"; fi)" >> "$GITHUB_OUTPUT"

      - uses: actions/download-artifact@v3
        with:
          name: ansible-collection

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ steps.prerelease.outputs.prerelease }}
          generate_release_notes: true
          files: |
            *.tar.gz

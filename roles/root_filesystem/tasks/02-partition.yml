---
- name: Install fdisk
  ansible.builtin.apt:
    name: fdisk
    state: present
    install_recommends: false

- name: Get current number of blocks in volume
  ansible.builtin.shell: |
    set -euo pipefail
    fdisk -l {{ root_filesystem_partition }} | grep 'Disk' | awk '{ print $7 }'
  args:
    executable: /bin/bash
  register: root_filesystem_blocks_current
  changed_when: false

- name: Set desired number of blocks in volume
  ansible.builtin.set_fact:
    root_filesystem_blocks_current: "{{ root_filesystem_blocks_current.stdout | int }}"
    root_filesystem_blocks_desired: "{{ (root_filesystem_size.replace('G', '') | int * 1024 * 1024 * 1024 / 512) | int }}"

- name: Reduce volume size
  when: root_filesystem_blocks_current | int > root_filesystem_blocks_desired | int
  block:
  - name: Run e2fsck
    ansible.builtin.command: |
      e2fsck -y -f {{ root_filesystem_partition }}
    changed_when: false

  - name: Reduce volume size using resize2fs
    ansible.builtin.command: |
      resize2fs {{ root_filesystem_partition }} {{ root_filesystem_size }}
    register: root_filesystem_resize
    changed_when: '"Nothing to do!" not in root_filesystem_resize.stderr'

- name: Resize partition using sfdisk
  ansible.builtin.shell: |
    set -euo pipefail
    sfdisk --dump {{ root_filesystem_device }} > /tmp/partition.dump
    sed -i '/{{ root_filesystem_partition.replace("/", "\/") }} :/s/size=.*,/size={{ root_filesystem_blocks_desired }},/' /tmp/partition.dump
    sfdisk {{ root_filesystem_device }} < /tmp/partition.dump
  args:
    executable: /bin/bash
  changed_when: false

- name: Run e2fsck
  ansible.builtin.command: |
    e2fsck -y -f {{ root_filesystem_partition }}
  changed_when: false

- name: Grow volume size using resize2fs
  ansible.builtin.command: |
    resize2fs {{ root_filesystem_partition }}
  register: root_filesystem_resize
  changed_when: '"Nothing to do!" not in root_filesystem_resize.stderr'
